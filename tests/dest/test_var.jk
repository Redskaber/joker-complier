//! This file is generated by jk!
//! Test var Statement: 

// var_decl       â†’ "var" IDENTIFIER (":" type)? ("=" expression)?
//                      ("," IDENTIFIER (":" type)? ("=" expression)?)? ";"

class TestVar {
    fn new() -> TestVar {
        return TestVar();
    }
    fn test_var_default() -> None {
        var default;        
        if (default == None) {
            println("default is None");
        } else {
            print default;
        }
    }
    
    fn test_var_init() -> None {
        var init = 42;
        println("init is %d", init);
    }
    
    fn test_more_var_default() -> None {
        var default1, default2;
        match default1 {
            None => match default2 {
                None => println("default1 and default2 are None"),
                _ => println("default1 is None, default2 is not None"),
            },
            _ => println("default1 is not None"),
        }
    }

    fn test_more_var_init() -> None {
        var init1 = 42, init2 = 43;
        println("init1 is %d, init2 is %d", init1, init2);
    }

    fn test_more_var_init_with_type() -> None {
        var init1: i32 = 42, init2: i32 = 43;
        println("init1 is %d, init2 is %d", init1, init2);
    }
}



fn main() -> None {
    // var test_var = TestVar();
    // println("TestVar: %s", test_var);
    // test_var.test_var_default();
    // test_var.test_var_init();

    var test_var = TestVar::new();
    println("TestVar: %s", test_var);


    // todo::block scope start
    {
        var a = 11;
        println("a \% 10 = %d", a % 10);
    }
    // todo::block scope end

    // println("a \% 10 = %d", a % 10);     // todo:: error: a is not defined

    test_var.test_more_var_default();
    test_var.test_more_var_init();
    test_var.test_more_var_init_with_type();
    return None;
}

main();
